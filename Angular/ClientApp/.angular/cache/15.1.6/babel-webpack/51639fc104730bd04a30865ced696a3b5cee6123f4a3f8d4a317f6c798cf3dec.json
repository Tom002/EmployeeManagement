{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n    this.currentUser = {};\n  }\n  setUser(user) {\n    this.currentUser = user;\n    localStorage.setItem('access_token', user.token);\n  }\n  getUserName() {\n    this.decodeToken();\n    return this.decodedToken ? this.decodedToken.displayname : null;\n  }\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n  doLogout() {\n    localStorage.removeItem('access_token');\n    this.currentUser = {};\n  }\n  get isLoggedIn() {\n    let authToken = localStorage.getItem('access_token');\n    return authToken !== null ? true : false;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,sBAAsB;;AAKlD,OAAM,MAAOC,WAAW;EAKtBC;IAJA,YAAO,GAAG,IAAIF,WAAW,EAAE,CAACG,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACnE,gBAAW,GAAqB,EAAE;EAGnB;EAEfC,OAAO,CAACC,IAAsB;IAC5B,IAAI,CAACC,WAAW,GAAGD,IAAI;IACvBE,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,IAAI,CAACI,KAAM,CAAC;EACnD;EAEAC,WAAW;IACT,IAAI,CAACC,WAAW,EAAE;IAClB,OAAO,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,WAAW,GAAG,IAAI;EACjE;EAEAC,QAAQ;IACN,OAAOP,YAAY,CAACQ,OAAO,CAAC,cAAc,CAAC;EAC7C;EAEAC,QAAQ;IACNT,YAAY,CAACU,UAAU,CAAC,cAAc,CAAC;IACvC,IAAI,CAACX,WAAW,GAAG,EAAE;EACvB;EAEA,IAAIY,UAAU;IACZ,IAAIC,SAAS,GAAGZ,YAAY,CAACQ,OAAO,CAAC,cAAc,CAAC;IACpD,OAAOI,SAAS,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK;EAC1C;;AA7BWlB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["HttpHeaders","AuthService","constructor","set","setUser","user","currentUser","localStorage","setItem","token","getUserName","decodeToken","decodedToken","displayname","getToken","getItem","doLogout","removeItem","isLoggedIn","authToken","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\shared\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { LoginResponseDto } from 'src/app/api/app.generated';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  currentUser: LoginResponseDto = {};\r\n  decodedToken: { [key: string]: string };\r\n\r\n  constructor() {}\r\n\r\n  setUser(user: LoginResponseDto) {\r\n    this.currentUser = user;\r\n    localStorage.setItem('access_token', user.token!);\r\n  }\r\n\r\n  getUserName() {\r\n    this.decodeToken();\r\n    return this.decodedToken ? this.decodedToken.displayname : null;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('access_token');\r\n  }\r\n\r\n  doLogout() {\r\n    localStorage.removeItem('access_token');\r\n    this.currentUser = {};\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    let authToken = localStorage.getItem('access_token');\r\n    return authToken !== null ? true : false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}