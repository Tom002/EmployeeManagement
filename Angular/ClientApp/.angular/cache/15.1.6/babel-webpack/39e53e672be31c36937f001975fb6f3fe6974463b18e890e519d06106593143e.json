{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api/app.generated\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/shared/services/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/card\";\nfunction LoginPageComponent_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nexport class LoginPageComponent {\n  constructor(loginClient, fb, auth, router) {\n    this.loginClient = loginClient;\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required, Validators.maxLength(100)]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  submit() {\n    if (this.loginForm.valid) {\n      this.loginClient.login({\n        username: this.loginForm.controls['username'].value,\n        password: this.loginForm.controls['password'].value\n      }).subscribe(result => {\n        this.error = undefined;\n        this.auth.setUser(result);\n        this.router.navigate(['employees']);\n      }, error => {\n        this.error = 'Invalid credentials';\n      });\n    }\n  }\n}\nLoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.LoginClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router));\n};\nLoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPageComponent,\n  selectors: [[\"app-login-page\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Username\", \"formControlName\", \"username\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"button\"], [\"type\", \"submit\", \"mat-button\", \"\"], [1, \"error\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(5, \"p\")(6, \"mat-form-field\");\n      i0.ɵɵelement(7, \"input\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"p\")(9, \"mat-form-field\");\n      i0.ɵɵelement(10, \"input\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, LoginPageComponent_p_11_Template, 2, 1, \"p\", 3);\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"button\", 5);\n      i0.ɵɵtext(14, \"Login\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n    }\n  },\n  dependencies: [i5.NgIf, i6.MatButton, i7.MatInput, i8.MatFormField, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i9.MatCard, i9.MatCardContent, i9.MatCardTitle],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAIEA,UAAU,QACL,gBAAgB;;;;;;;;;;;;;ICoBjBC,4BAA+B;IAC7BA,YACF;IAAAA,iBAAI;;;;IADFA,eACF;IADEA,6CACF;;;ADXN,OAAM,MAAOC,kBAAkB;EAI7BC,YACmBC,WAAwB,EACxBC,EAAe,EACfC,IAAiB,EACjBC,MAAc;IAHd,gBAAW,GAAXH,WAAW;IACX,OAAE,GAAFC,EAAE;IACF,SAAI,GAAJC,IAAI;IACJ,WAAM,GAANC,MAAM;IAEvB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACY,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;MAChEC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAI,IAAI,CAACP,SAAS,CAACQ,KAAK,EAAE;MACxB,IAAI,CAACZ,WAAW,CACba,KAAK,CAAC;QACLP,QAAQ,EAAE,IAAI,CAACF,SAAS,CAACU,QAAQ,CAAC,UAAU,CAAC,CAACC,KAAK;QACnDN,QAAQ,EAAE,IAAI,CAACL,SAAS,CAACU,QAAQ,CAAC,UAAU,CAAC,CAACC;OAC/C,CAAC,CACDC,SAAS,CACPC,MAAM,IAAI;QACT,IAAI,CAACC,KAAK,GAAGC,SAAS;QACtB,IAAI,CAACjB,IAAI,CAACkB,OAAO,CAACH,MAAM,CAAC;QACzB,IAAI,CAACd,MAAM,CAACkB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;MACrC,CAAC,EACAH,KAAK,IAAI;QACR,IAAI,CAACA,KAAK,GAAG,qBAAqB;MACpC,CAAC,CACF;;EAEP;;AAlCWpB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjB/B7B,gCAAU;MACQA,qBAAK;MAAAA,iBAAiB;MACtCA,wCAAkB;MACcA;QAAA,OAAY8B,YAAQ;MAAA,EAAC;MACjD9B,yBAAG;MAECA,2BAKE;MACJA,iBAAiB;MAGnBA,yBAAG;MAECA,4BAKE;MACJA,iBAAiB;MAGnBA,iEAEI;MAEJA,+BAAoB;MACeA,sBAAK;MAAAA,iBAAS;;;MA5B7CA,eAAuB;MAAvBA,yCAAuB;MAuBvBA,eAAW;MAAXA,gCAAW","names":["Validators","i0","LoginPageComponent","constructor","loginClient","fb","auth","router","loginForm","group","username","required","maxLength","password","minLength","submit","valid","login","controls","value","subscribe","result","error","undefined","setUser","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\login\\login-page\\login-page.component.ts","C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\login\\login-page\\login-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { error } from 'console';\nimport { LoginClient } from 'src/app/api/app.generated';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css'],\n})\nexport class LoginPageComponent {\n  loginForm!: FormGroup;\n  error: string | undefined;\n\n  constructor(\n    private readonly loginClient: LoginClient,\n    private readonly fb: FormBuilder,\n    private readonly auth: AuthService,\n    private readonly router: Router\n  ) {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required, Validators.maxLength(100)]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n    });\n  }\n\n  submit() {\n    if (this.loginForm.valid) {\n      this.loginClient\n        .login({\n          username: this.loginForm.controls['username'].value,\n          password: this.loginForm.controls['password'].value,\n        })\n        .subscribe(\n          (result) => {\n            this.error = undefined;\n            this.auth.setUser(result);\n            this.router.navigate(['employees']);\n          },\n          (error) => {\n            this.error = 'Invalid credentials';\n          }\n        );\n    }\n  }\n}\n","<mat-card>\n  <mat-card-title>Login</mat-card-title>\n  <mat-card-content>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n      <p>\n        <mat-form-field>\n          <input\n            type=\"text\"\n            matInput\n            placeholder=\"Username\"\n            formControlName=\"username\"\n          />\n        </mat-form-field>\n      </p>\n\n      <p>\n        <mat-form-field>\n          <input\n            type=\"password\"\n            matInput\n            placeholder=\"Password\"\n            formControlName=\"password\"\n          />\n        </mat-form-field>\n      </p>\n\n      <p *ngIf=\"error\" class=\"error\">\n        {{ error }}\n      </p>\n\n      <div class=\"button\">\n        <button type=\"submit\" mat-button>Login</button>\n      </div>\n    </form>\n  </mat-card-content>\n</mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}