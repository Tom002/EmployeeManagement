{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EmployeeEditComponent = class EmployeeEditComponent {\n  constructor(employeeClient, departmentClient, dialogRef, fb) {\n    this.employeeClient = employeeClient;\n    this.departmentClient = departmentClient;\n    this.dialogRef = dialogRef;\n    this.fb = fb;\n    this.bossSelectOptions = [];\n    this.departmentSelectOptions = [];\n    this.hide = true;\n    this.dataLoaded = false;\n    this.errorHandling = (control, error) => {\n      return this.addEmployeeForm.controls[control].hasError(error);\n    };\n    this.initForm();\n  }\n  ngOnInit() {\n    combineLatest([this.employeeClient.employeeAll(), this.departmentClient.departmentAll()]).subscribe(result => {\n      this.dataLoaded = true;\n      this.bossSelectOptions = result[0];\n      this.departmentSelectOptions = result[1];\n    });\n  }\n  initForm() {\n    this.addEmployeeForm = this.fb.group({\n      username: ['', [Validators.required, Validators.maxLength(100)]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      position: ['', [Validators.required, Validators.maxLength(100)]],\n      phone: ['', [Validators.required, Validators.maxLength(16)]],\n      bossId: [null],\n      departmentId: [null, [Validators.required]]\n    });\n  }\n  cancel() {\n    this.dialogRef.close(false);\n  }\n  submitForm() {\n    this.employeeClient.employeePOST({\n      username: this.addEmployeeForm.controls['username'].value,\n      password: this.addEmployeeForm.controls['password'].value,\n      name: this.addEmployeeForm.controls['name'].value,\n      position: this.addEmployeeForm.controls['position'].value,\n      phone: this.addEmployeeForm.controls['phone'].value,\n      bossId: this.addEmployeeForm.controls['bossId'].value,\n      departmentId: this.addEmployeeForm.controls['departmentId'].value\n    }).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n};\nEmployeeEditComponent = __decorate([Component({\n  selector: 'app-employee-edit',\n  templateUrl: './employee-edit.component.html',\n  styleUrls: ['./employee-edit.component.css']\n})], EmployeeEditComponent);\nexport { EmployeeEditComponent };","map":{"version":3,"mappings":"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","names":["Component","EmployeeEditComponent","constructor","employeeClient","departmentClient","dialogRef","fb","control","error","addEmployeeForm","controls","hasError","initForm","ngOnInit","combineLatest","employeeAll","departmentAll","subscribe","result","dataLoaded","bossSelectOptions","departmentSelectOptions","group","username","Validators","required","maxLength","password","minLength","name","position","phone","bossId","departmentId","cancel","close","submitForm","employeePOST","value","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\employee\\employee-edit\\employee-edit.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-employee-edit',\n  templateUrl: './employee-edit.component.html',\n  styleUrls: ['./employee-edit.component.css'],\n})\nexport class EmployeeEditComponent {\n  addEmployeeForm!: FormGroup;\n\n  bossSelectOptions: EmployeeListDto[] = [];\n  departmentSelectOptions: DepartmentDto[] = [];\n  hide = true;\n  dataLoaded = false;\n\n  constructor(\n    private readonly employeeClient: EmployeeClient,\n    private readonly departmentClient: DepartmentClient,\n    private readonly dialogRef: MatDialogRef<EmployeeAddComponent>,\n    private readonly fb: FormBuilder\n  ) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    combineLatest([\n      this.employeeClient.employeeAll(),\n      this.departmentClient.departmentAll(),\n    ]).subscribe((result) => {\n      this.dataLoaded = true;\n      this.bossSelectOptions = result[0];\n      this.departmentSelectOptions = result[1];\n    });\n  }\n\n  initForm() {\n    this.addEmployeeForm = this.fb.group({\n      username: ['', [Validators.required, Validators.maxLength(100)]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      position: ['', [Validators.required, Validators.maxLength(100)]],\n      phone: ['', [Validators.required, Validators.maxLength(16)]],\n      bossId: [null],\n      departmentId: [null, [Validators.required]],\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  submitForm() {\n    this.employeeClient\n      .employeePOST({\n        username: this.addEmployeeForm.controls['username'].value,\n        password: this.addEmployeeForm.controls['password'].value,\n        name: this.addEmployeeForm.controls['name'].value,\n        position: this.addEmployeeForm.controls['position'].value,\n        phone: this.addEmployeeForm.controls['phone'].value,\n        bossId: this.addEmployeeForm.controls['bossId'].value,\n        departmentId: this.addEmployeeForm.controls['departmentId'].value,\n      } as EmployeeCreateOrUpdateDto)\n      .subscribe(() => {\n        this.dialogRef.close(true);\n      });\n  }\n\n  public errorHandling = (control: string, error: string) => {\n    return this.addEmployeeForm.controls[control].hasError(error);\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}