{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api/app.generated\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nexport class DepartmentEditComponent {\n  constructor(departmentClient, dialogRef, data, fb) {\n    this.departmentClient = departmentClient;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.fb = fb;\n    this.errorHandling = (control, error) => {\n      return this.addDepartmentForm.controls[control].hasError(error);\n    };\n    this.editDepartmentForm = this.fb.group({\n      name: [data.name, [Validators.required, Validators.maxLength(100)]],\n      abbreviation: [data.abbreviation, [Validators.required, Validators.maxLength(5)]]\n    });\n  }\n  cancel() {\n    this.dialogRef.close(false);\n  }\n  submitForm() {\n    this.departmentClient.departmentPUT({\n      name: this.editDepartmentForm.controls['name'].value,\n      abbreviation: this.editDepartmentForm.controls['abbreviation'].value\n    }).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n}\nDepartmentEditComponent.ɵfac = function DepartmentEditComponent_Factory(t) {\n  return new (t || DepartmentEditComponent)(i0.ɵɵdirectiveInject(i1.DepartmentClient), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nDepartmentEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DepartmentEditComponent,\n  selectors: [[\"app-department-edit\"]],\n  decls: 2,\n  vars: 0,\n  template: function DepartmentEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"department-edit works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AACnE,SAASC,eAAe,QAAsB,0BAA0B;;;;;AAQxE,OAAM,MAAOC,uBAAuB;EAGlCC,YACmBC,gBAAkC,EAClCC,SAAgD,EACjCC,IAAmB,EAClCC,EAAe;IAHf,qBAAgB,GAAhBH,gBAAgB;IAChB,cAAS,GAATC,SAAS;IACM,SAAI,GAAJC,IAAI;IACnB,OAAE,GAAFC,EAAE;IA0Bd,kBAAa,GAAG,CAACC,OAAe,EAAEC,KAAa,KAAI;MACxD,OAAO,IAAI,CAACC,iBAAiB,CAACC,QAAQ,CAACH,OAAO,CAAC,CAACI,QAAQ,CAACH,KAAK,CAAC;IACjE,CAAC;IA1BC,IAAI,CAACI,kBAAkB,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MACtCC,IAAI,EAAE,CAACT,IAAI,CAACS,IAAI,EAAE,CAACf,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACiB,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;MACnEC,YAAY,EAAE,CACZZ,IAAI,CAACY,YAAY,EACjB,CAAClB,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACiB,SAAS,CAAC,CAAC,CAAC,CAAC;KAEjD,CAAC;EACJ;EAEAE,MAAM;IACJ,IAAI,CAACd,SAAS,CAACe,KAAK,CAAC,KAAK,CAAC;EAC7B;EAEAC,UAAU;IACR,IAAI,CAACjB,gBAAgB,CAClBkB,aAAa,CAAC;MACbP,IAAI,EAAE,IAAI,CAACF,kBAAkB,CAACF,QAAQ,CAAC,MAAM,CAAC,CAACY,KAAK;MACpDL,YAAY,EAAE,IAAI,CAACL,kBAAkB,CAACF,QAAQ,CAAC,cAAc,CAAC,CAACY;KAChE,CAAC,CACDC,SAAS,CAAC,MAAK;MACd,IAAI,CAACnB,SAAS,CAACe,KAAK,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACN;;AA/BWlB,uBAAuB;mBAAvBA,uBAAuB,yGAMxBD,eAAe;AAAA;AANdC,uBAAuB;QAAvBA,uBAAuB;EAAAuB;EAAAC;EAAAC;EAAAC;IAAA;MCVpCC,yBAAG;MAAAA,sCAAsB;MAAAA,iBAAI","names":["Validators","MAT_DIALOG_DATA","DepartmentEditComponent","constructor","departmentClient","dialogRef","data","fb","control","error","addDepartmentForm","controls","hasError","editDepartmentForm","group","name","required","maxLength","abbreviation","cancel","close","submitForm","departmentPUT","value","subscribe","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\department\\department-edit\\department-edit.component.ts","C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\department\\department-edit\\department-edit.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DepartmentClient, DepartmentDto } from 'src/app/api/app.generated';\n\n@Component({\n  selector: 'app-department-edit',\n  templateUrl: './department-edit.component.html',\n  styleUrls: ['./department-edit.component.css'],\n})\nexport class DepartmentEditComponent {\n  editDepartmentForm!: FormGroup;\n\n  constructor(\n    private readonly departmentClient: DepartmentClient,\n    private readonly dialogRef: MatDialogRef<DepartmentEditComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DepartmentDto,\n    private readonly fb: FormBuilder\n  ) {\n    this.editDepartmentForm = this.fb.group({\n      name: [data.name, [Validators.required, Validators.maxLength(100)]],\n      abbreviation: [\n        data.abbreviation,\n        [Validators.required, Validators.maxLength(5)],\n      ],\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  submitForm() {\n    this.departmentClient\n      .departmentPUT({\n        name: this.editDepartmentForm.controls['name'].value,\n        abbreviation: this.editDepartmentForm.controls['abbreviation'].value,\n      })\n      .subscribe(() => {\n        this.dialogRef.close(true);\n      });\n  }\n\n  public errorHandling = (control: string, error: string) => {\n    return this.addDepartmentForm.controls[control].hasError(error);\n  };\n}\n","<p>department-edit works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}