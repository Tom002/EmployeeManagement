{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api/app.generated\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nfunction EmployeeAddComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name can't be longer than 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Abbreviation is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Abbreviation can't be longer than 5 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EmployeeAddComponent {\n  constructor(employeeClient, dialogRef, fb) {\n    this.employeeClient = employeeClient;\n    this.dialogRef = dialogRef;\n    this.fb = fb;\n    this.errorHandling = (control, error) => {\n      return this.addDepartmentForm.controls[control].hasError(error);\n    };\n    this.initForm();\n  }\n  initForm() {\n    this.addEmployeeForm = this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      position: ['', [Validators.required, Validators.maxLength(100)]],\n      phone: ['', [Validators.required, Validators.maxLength(16)]],\n      username: ['', [Validators.required, Validators.maxLength(100)]],\n      password: ['', [Validators.required, Validators.maxLength(100)]],\n      bossId: [''],\n      departmentId: ['', [Validators.required]]\n    });\n  }\n  cancel() {\n    this.dialogRef.close(false);\n  }\n  submitForm() {\n    this.departmentClient.departmentPOST({\n      name: this.addDepartmentForm.controls['name'].value,\n      abbreviation: this.addDepartmentForm.controls['abbreviation'].value\n    }).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n}\nEmployeeAddComponent.ɵfac = function EmployeeAddComponent_Factory(t) {\n  return new (t || EmployeeAddComponent)(i0.ɵɵdirectiveInject(i1.EmployeeClient), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nEmployeeAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeAddComponent,\n  selectors: [[\"app-employee-add\"]],\n  decls: 22,\n  vars: 7,\n  consts: [[1, \"container\"], [\"mat-dialog-title\", \"\"], [3, \"formGroup\"], [1, \"content-container\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Abbreviation\", \"formControlName\", \"abbreviation\"], [\"mat-dialog-actions\", \"\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", \"color\", \"primary\", 3, \"disabled\", \"mat-dialog-close\", \"click\"], [\"mat-button\", \"\", \"tabindex\", \"-1\", 3, \"click\"]],\n  template: function EmployeeAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Add new employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\", 3)(5, \"mat-form-field\", 4)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵtemplate(9, EmployeeAddComponent_mat_error_9_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(10, EmployeeAddComponent_mat_error_10_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-form-field\", 4)(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Abbreviation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵtemplate(15, EmployeeAddComponent_mat_error_15_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵtemplate(16, EmployeeAddComponent_mat_error_16_Template, 2, 0, \"mat-error\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 8)(18, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function EmployeeAddComponent_Template_button_click_18_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵtext(19, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function EmployeeAddComponent_Template_button_click_20_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(21, \"Cancel\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.addEmployeeForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"name\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"name\", \"maxlength\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"abbreviation\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"abbreviation\", \"maxlength\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.addEmployeeForm.valid)(\"mat-dialog-close\", 1);\n    }\n  },\n  dependencies: [i4.NgIf, i5.MatButton, i2.MatDialogClose, i2.MatDialogTitle, i2.MatDialogActions, i6.MatInput, i7.MatFormField, i7.MatLabel, i7.MatError, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","EmployeeAddComponent","constructor","employeeClient","dialogRef","fb","control","error","addDepartmentForm","controls","hasError","initForm","addEmployeeForm","group","name","required","maxLength","position","phone","username","password","bossId","departmentId","cancel","close","submitForm","departmentClient","departmentPOST","value","abbreviation","subscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\employee\\employee-add\\employee-add.component.ts","C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\employee\\employee-add\\employee-add.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { EmployeeClient } from 'src/app/api/app.generated';\n\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css'],\n})\nexport class EmployeeAddComponent {\n  addEmployeeForm!: FormGroup;\n\n  constructor(\n    private readonly employeeClient: EmployeeClient,\n    private readonly dialogRef: MatDialogRef<EmployeeAddComponent>,\n    private readonly fb: FormBuilder\n  ) {\n    this.initForm();\n  }\n\n  initForm() {\n    this.addEmployeeForm = this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      position: ['', [Validators.required, Validators.maxLength(100)]],\n      phone: ['', [Validators.required, Validators.maxLength(16)]],\n      username: ['', [Validators.required, Validators.maxLength(100)]],\n      password: ['', [Validators.required, Validators.maxLength(100)]],\n      bossId: [''],\n      departmentId: ['', [Validators.required]],\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  submitForm() {\n    this.departmentClient\n      .departmentPOST({\n        name: this.addDepartmentForm.controls['name'].value,\n        abbreviation: this.addDepartmentForm.controls['abbreviation'].value,\n      })\n      .subscribe(() => {\n        this.dialogRef.close(true);\n      });\n  }\n\n  public errorHandling = (control: string, error: string) => {\n    return this.addDepartmentForm.controls[control].hasError(error);\n  };\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Add new employee</h3>\n\n  <form [formGroup]=\"addEmployeeForm\">\n    <div class=\"content-container\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Name\" formControlName=\"name\" />\n        <mat-error *ngIf=\"errorHandling('name', 'required')\">\n          Name is required\n        </mat-error>\n        <mat-error *ngIf=\"errorHandling('name', 'maxlength')\">\n          Name can't be longer than 100 characters\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Abbreviation</mat-label>\n        <input\n          matInput\n          placeholder=\"Abbreviation\"\n          formControlName=\"abbreviation\"\n        />\n        <mat-error *ngIf=\"errorHandling('abbreviation', 'required')\">\n          Abbreviation is required\n        </mat-error>\n        <mat-error *ngIf=\"errorHandling('abbreviation', 'maxlength')\">\n          Abbreviation can't be longer than 5 characters\n        </mat-error>\n      </mat-form-field>\n\n      <div mat-dialog-actions>\n        <button\n          mat-raised-button\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"!addEmployeeForm.valid\"\n          [mat-dialog-close]=\"1\"\n          (click)=\"submitForm()\"\n        >\n          Save\n        </button>\n        <button mat-button (click)=\"cancel()\" tabindex=\"-1\">Cancel</button>\n      </div>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}