{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api/app.generated\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nfunction EmployeeAddComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username can't be longer than 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password needs to be at least 8 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name can't be longer than 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Position is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Position can't be longer than 100 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Phone is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Phone can't be longer than 16 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeAddComponent_mat_error_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password needs to be at least 8 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EmployeeAddComponent {\n  constructor(employeeClient, dialogRef, fb) {\n    this.employeeClient = employeeClient;\n    this.dialogRef = dialogRef;\n    this.fb = fb;\n    this.bossSelectOptions = [];\n    this.departmentSelectOptions = [];\n    this.errorHandling = (control, error) => {\n      return this.addEmployeeForm.controls[control].hasError(error);\n    };\n    this.initForm();\n  }\n  initForm() {\n    this.addEmployeeForm = this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      position: ['', [Validators.required, Validators.maxLength(100)]],\n      phone: ['', [Validators.required, Validators.maxLength(16)]],\n      username: ['', [Validators.required, Validators.maxLength(100)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n      bossId: [''],\n      departmentId: ['', [Validators.required]]\n    });\n  }\n  cancel() {\n    this.dialogRef.close(false);\n  }\n  submitForm() {\n    this.employeeClient.employeePOST({\n      name: this.addEmployeeForm.controls['name'].value,\n      position: this.addEmployeeForm.controls['abbreviation'].value,\n      phone: this.addEmployeeForm.controls['phone'].value,\n      username: this.addEmployeeForm.controls['username'].value,\n      password: this.addEmployeeForm.controls['password'].value,\n      bossId: this.addEmployeeForm.controls['bossId'].value,\n      departmentId: this.addEmployeeForm.controls['departmentId'].value\n    }).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n}\nEmployeeAddComponent.ɵfac = function EmployeeAddComponent_Factory(t) {\n  return new (t || EmployeeAddComponent)(i0.ɵɵdirectiveInject(i1.EmployeeClient), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nEmployeeAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeAddComponent,\n  selectors: [[\"app-employee-add\"]],\n  decls: 51,\n  vars: 17,\n  consts: [[1, \"container\"], [\"mat-dialog-title\", \"\"], [3, \"formGroup\"], [1, \"content-container\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"maxlength\", \"100\", \"placeholder\", \"Username\", \"formControlName\", \"username\"], [\"message\", \"\"], [\"align\", \"end\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 3, \"type\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Position\", \"formControlName\", \"position\"], [\"matPrefix\", \"\"], [\"matInput\", \"\", \"type\", \"tel\", \"placeholder\", \"20-123-4567\", \"formControlName\", \"phone\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"password\"], [\"mat-dialog-actions\", \"\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", \"color\", \"primary\", 3, \"disabled\", \"mat-dialog-close\", \"click\"], [\"mat-button\", \"\", \"tabindex\", \"-1\", 3, \"click\"]],\n  template: function EmployeeAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Add new employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\", 3)(5, \"mat-form-field\", 4)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5, 6);\n      i0.ɵɵelementStart(10, \"mat-hint\", 7);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, EmployeeAddComponent_mat_error_12_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵtemplate(13, EmployeeAddComponent_mat_error_13_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"mat-form-field\", 4)(15, \"mat-label\");\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 9);\n      i0.ɵɵtemplate(18, EmployeeAddComponent_mat_error_18_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵtemplate(19, EmployeeAddComponent_mat_error_19_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"mat-form-field\", 4)(21, \"mat-label\");\n      i0.ɵɵtext(22, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 10);\n      i0.ɵɵtemplate(24, EmployeeAddComponent_mat_error_24_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵtemplate(25, EmployeeAddComponent_mat_error_25_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"mat-form-field\", 4)(27, \"mat-label\");\n      i0.ɵɵtext(28, \"Position\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 11);\n      i0.ɵɵtemplate(30, EmployeeAddComponent_mat_error_30_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵtemplate(31, EmployeeAddComponent_mat_error_31_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"mat-form-field\", 4)(33, \"mat-label\");\n      i0.ɵɵtext(34, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"span\", 12);\n      i0.ɵɵtext(36, \"+36 \\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 13);\n      i0.ɵɵtemplate(38, EmployeeAddComponent_mat_error_38_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵtemplate(39, EmployeeAddComponent_mat_error_39_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"mat-form-field\", 4)(41, \"mat-label\");\n      i0.ɵɵtext(42, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 14);\n      i0.ɵɵtemplate(44, EmployeeAddComponent_mat_error_44_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵtemplate(45, EmployeeAddComponent_mat_error_45_Template, 2, 0, \"mat-error\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 15)(47, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function EmployeeAddComponent_Template_button_click_47_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵtext(48, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function EmployeeAddComponent_Template_button_click_49_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(50, \"Cancel\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.addEmployeeForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\"\", _r0.value.length, \" / 256\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"username\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"name\", \"maxlength\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"password\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"password\", \"minlength\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"name\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"name\", \"maxlength\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"position\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"position\", \"maxlength\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"phone\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"phone\", \"maxlength\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"password\", \"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"password\", \"minlength\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.addEmployeeForm.valid)(\"mat-dialog-close\", 1);\n    }\n  },\n  dependencies: [i4.NgIf, i5.MatButton, i2.MatDialogClose, i2.MatDialogTitle, i2.MatDialogActions, i6.MatInput, i7.MatFormField, i7.MatLabel, i7.MatHint, i7.MatError, i7.MatPrefix, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MaxLengthValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n  min-width: 600px;\\r\\n}\\r\\n\\r\\n.form[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  padding-top: 6px;\\r\\n}\\r\\n\\r\\n.mat-form-field[_ngcontent-%COMP%] {\\r\\n  font-size: 16px;\\r\\n  flex-grow: 1;\\r\\n}\\r\\n\\r\\n.content-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9lbXBsb3llZS9lbXBsb3llZS1hZGQvZW1wbG95ZWUtYWRkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgbWluLXdpZHRoOiA2MDBweDtcclxufVxyXG5cclxuLmZvcm0ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcGFkZGluZy10b3A6IDZweDtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxkIHtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgZmxleC1ncm93OiAxO1xyXG59XHJcblxyXG4uY29udGVudC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","EmployeeAddComponent","constructor","employeeClient","dialogRef","fb","control","error","addEmployeeForm","controls","hasError","initForm","group","name","required","maxLength","position","phone","username","password","minLength","bossId","departmentId","cancel","close","submitForm","employeePOST","value","subscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\employee\\employee-add\\employee-add.component.ts","C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\employee\\employee-add\\employee-add.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n  DepartmentDto,\n  EmployeeClient,\n  EmployeeListDto,\n} from 'src/app/api/app.generated';\n\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css'],\n})\nexport class EmployeeAddComponent {\n  addEmployeeForm!: FormGroup;\n\n  bossSelectOptions: EmployeeListDto[] = [];\n  departmentSelectOptions: DepartmentDto[] = [];\n\n  constructor(\n    private readonly employeeClient: EmployeeClient,\n    private readonly dialogRef: MatDialogRef<EmployeeAddComponent>,\n    private readonly fb: FormBuilder\n  ) {\n    this.initForm();\n  }\n\n  initForm() {\n    this.addEmployeeForm = this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      position: ['', [Validators.required, Validators.maxLength(100)]],\n      phone: ['', [Validators.required, Validators.maxLength(16)]],\n      username: ['', [Validators.required, Validators.maxLength(100)]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(20),\n        ],\n      ],\n      bossId: [''],\n      departmentId: ['', [Validators.required]],\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  submitForm() {\n    this.employeeClient\n      .employeePOST({\n        name: this.addEmployeeForm.controls['name'].value,\n        position: this.addEmployeeForm.controls['abbreviation'].value,\n        phone: this.addEmployeeForm.controls['phone'].value,\n        username: this.addEmployeeForm.controls['username'].value,\n        password: this.addEmployeeForm.controls['password'].value,\n        bossId: this.addEmployeeForm.controls['bossId'].value,\n        departmentId: this.addEmployeeForm.controls['departmentId'].value,\n      })\n      .subscribe(() => {\n        this.dialogRef.close(true);\n      });\n  }\n\n  public errorHandling = (control: string, error: string) => {\n    return this.addEmployeeForm.controls[control].hasError(error);\n  };\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Add new employee</h3>\n\n  <form [formGroup]=\"addEmployeeForm\">\n    <div class=\"content-container\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Username</mat-label>\n        <input\n          matInput\n          #message\n          maxlength=\"100\"\n          placeholder=\"Username\"\n          formControlName=\"username\"\n        />\n        <mat-hint align=\"end\">{{ message.value.length }} / 256</mat-hint>\n        <mat-error *ngIf=\"errorHandling('username', 'required')\">\n          Username is required\n        </mat-error>\n        <mat-error *ngIf=\"errorHandling('name', 'maxlength')\">\n          Username can't be longer than 100 characters\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Password</mat-label>\n        <input\n          matInput\n          [type]=\"hide ? 'password' : 'text'\"\n          placeholder=\"Password\"\n          formControlName=\"password\"\n        />\n        <mat-error *ngIf=\"errorHandling('password', 'required')\">\n          Password is required\n        </mat-error>\n        <mat-error *ngIf=\"errorHandling('password', 'minlength')\">\n          Password needs to be at least 8 characters\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Name\" formControlName=\"name\" />\n        <mat-error *ngIf=\"errorHandling('name', 'required')\">\n          Name is required\n        </mat-error>\n        <mat-error *ngIf=\"errorHandling('name', 'maxlength')\">\n          Name can't be longer than 100 characters\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Position</mat-label>\n        <input matInput placeholder=\"Position\" formControlName=\"position\" />\n        <mat-error *ngIf=\"errorHandling('position', 'required')\">\n          Position is required\n        </mat-error>\n        <mat-error *ngIf=\"errorHandling('position', 'maxlength')\">\n          Position can't be longer than 100 characters\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Phone</mat-label>\n        <span matPrefix>+36 &nbsp;</span>\n        <input\n          matInput\n          type=\"tel\"\n          placeholder=\"20-123-4567\"\n          formControlName=\"phone\"\n        />\n        <mat-error *ngIf=\"errorHandling('phone', 'required')\">\n          Phone is required\n        </mat-error>\n        <mat-error *ngIf=\"errorHandling('phone', 'maxlength')\">\n          Phone can't be longer than 16 characters\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Password</mat-label>\n        <input matInput placeholder=\"Name\" formControlName=\"password\" />\n        <mat-error *ngIf=\"errorHandling('password', 'required')\">\n          Password is required\n        </mat-error>\n        <mat-error *ngIf=\"errorHandling('password', 'minlength')\">\n          Password needs to be at least 8 characters\n        </mat-error>\n      </mat-form-field>\n\n      <div mat-dialog-actions>\n        <button\n          mat-raised-button\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"!addEmployeeForm.valid\"\n          [mat-dialog-close]=\"1\"\n          (click)=\"submitForm()\"\n        >\n          Save\n        </button>\n        <button mat-button (click)=\"cancel()\" tabindex=\"-1\">Cancel</button>\n      </div>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}