{"ast":null,"code":"import { EmployeeAddComponent } from '../employee-add/employee-add.component';\nimport { EmployeeEditComponent } from '../employee-edit/employee-edit.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api/app.generated\";\nimport * as i2 from \"@angular/material/dialog\";\nexport class EmployeeListComponent {\n  constructor(employeeClient, dialog) {\n    this.employeeClient = employeeClient;\n    this.dialog = dialog;\n    this.employees = [];\n    this.columnsToDisplay = ['name', 'position', 'phone', 'departmentName', 'actions'];\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n    this.employeeClient.employeeAll().subscribe(data => {\n      this.employees = data;\n    });\n  }\n  addEmployee() {\n    const dialogRef = this.dialog.open(EmployeeAddComponent);\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadData();\n      }\n    });\n  }\n  deleteEmployee(employeeId) {\n    this.employeeClient.employeeDELETE(employeeId).subscribe(() => {\n      this.loadData();\n    });\n  }\n  editEmployee(employeeId) {\n    const dialogRef = this.dialog.open(EmployeeEditComponent, {\n      data: {\n        id: employeeId\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.loadData();\n      }\n    });\n  }\n}\nEmployeeListComponent.ɵfac = function EmployeeListComponent_Factory(t) {\n  return new (t || EmployeeListComponent)(i0.ɵɵdirectiveInject(i1.EmployeeClient), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\nEmployeeListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeListComponent,\n  selectors: [[\"app-employee-list\"]],\n  decls: 2,\n  vars: 0,\n  template: function EmployeeListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"employee-list works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,oBAAoB,QAAQ,wCAAwC;AAC7E,SAASC,qBAAqB,QAAQ,0CAA0C;;;;AAOhF,OAAM,MAAOC,qBAAqB;EAKhCC,YACmBC,cAA8B,EAC9BC,MAAiB;IADjB,mBAAc,GAAdD,cAAc;IACd,WAAM,GAANC,MAAM;IANzB,cAAS,GAAsB,EAAE;IAEjC,qBAAgB,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE,SAAS,CAAC;EAK1E;EACHC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MACnD,IAAI,CAACC,SAAS,GAAGD,IAAI;IACvB,CAAC,CAAC;EACJ;EAEAE,WAAW;IACT,MAAMC,SAAS,GAAG,IAAI,CAACR,MAAM,CAACS,IAAI,CAACd,oBAAoB,CAAC;IAExDa,SAAS,CAACE,WAAW,EAAE,CAACN,SAAS,CAAEO,MAAM,IAAI;MAC3C,IAAIA,MAAM,EAAE;QACV,IAAI,CAACT,QAAQ,EAAE;;IAEnB,CAAC,CAAC;EACJ;EAEAU,cAAc,CAACC,UAAkB;IAC/B,IAAI,CAACd,cAAc,CAACe,cAAc,CAACD,UAAU,CAAC,CAACT,SAAS,CAAC,MAAK;MAC5D,IAAI,CAACF,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;EAEAa,YAAY,CAACF,UAAkB;IAC7B,MAAML,SAAS,GAAG,IAAI,CAACR,MAAM,CAACS,IAAI,CAACb,qBAAqB,EAAE;MACxDS,IAAI,EAAE;QAAEW,EAAE,EAAEH;MAAU;KACvB,CAAC;IAEFL,SAAS,CAACE,WAAW,EAAE,CAACN,SAAS,CAAEO,MAAM,IAAI;MAC3C,IAAIA,MAAM,EAAE;QACV,IAAI,CAACT,QAAQ,EAAE;;IAEnB,CAAC,CAAC;EACJ;;AA7CWL,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAoB;EAAAC;EAAAC;EAAAC;IAAA;MCXlCC,yBAAG;MAAAA,oCAAoB;MAAAA,iBAAI","names":["EmployeeAddComponent","EmployeeEditComponent","EmployeeListComponent","constructor","employeeClient","dialog","ngOnInit","loadData","employeeAll","subscribe","data","employees","addEmployee","dialogRef","open","afterClosed","result","deleteEmployee","employeeId","employeeDELETE","editEmployee","id","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\employee\\employee-list\\employee-list.component.ts","C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\employee\\employee-list\\employee-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EmployeeClient, EmployeeListDto } from 'src/app/api/app.generated';\nimport { EmployeeAddComponent } from '../employee-add/employee-add.component';\nimport { EmployeeEditComponent } from '../employee-edit/employee-edit.component';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css'],\n})\nexport class EmployeeListComponent {\n  employees: EmployeeListDto[] = [];\n\n  columnsToDisplay = ['name', 'position', 'phone', 'departmentName', 'actions'];\n\n  constructor(\n    private readonly employeeClient: EmployeeClient,\n    private readonly dialog: MatDialog\n  ) {}\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  loadData(): void {\n    this.employeeClient.employeeAll().subscribe((data) => {\n      this.employees = data;\n    });\n  }\n\n  addEmployee() {\n    const dialogRef = this.dialog.open(EmployeeAddComponent);\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.loadData();\n      }\n    });\n  }\n\n  deleteEmployee(employeeId: number) {\n    this.employeeClient.employeeDELETE(employeeId).subscribe(() => {\n      this.loadData();\n    });\n  }\n\n  editEmployee(employeeId: number) {\n    const dialogRef = this.dialog.open(EmployeeEditComponent, {\n      data: { id: employeeId },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.loadData();\n      }\n    });\n  }\n}\n","<p>employee-list works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}