{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api/app.generated\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/progress-spinner\";\nfunction EmployeeAddComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"mat-spinner\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport class EmployeeAddComponent {\n  constructor(employeeClient, departmentClient, dialogRef, fb) {\n    this.employeeClient = employeeClient;\n    this.departmentClient = departmentClient;\n    this.dialogRef = dialogRef;\n    this.fb = fb;\n    this.bossSelectOptions = [];\n    this.departmentSelectOptions = [];\n    this.hide = true;\n    this.dataLoaded = false;\n    this.errorHandling = (control, error) => {\n      return this.addEmployeeForm.controls[control].hasError(error);\n    };\n    this.initForm();\n  }\n  ngOnInit() {\n    combineLatest([this.employeeClient.employeeAll(), this.departmentClient.departmentAll()]).subscribe(result => {\n      this.dataLoaded = true;\n      this.bossSelectOptions = result[0];\n      this.departmentSelectOptions = result[1];\n    });\n  }\n  initForm() {\n    this.addEmployeeForm = this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      position: ['', [Validators.required, Validators.maxLength(100)]],\n      phone: ['', [Validators.required, Validators.maxLength(16)]],\n      username: ['', [Validators.required, Validators.maxLength(100)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n      bossId: [''],\n      departmentId: ['', [Validators.required]]\n    });\n  }\n  cancel() {\n    this.dialogRef.close(false);\n  }\n  submitForm() {\n    this.employeeClient.employeePOST({\n      name: this.addEmployeeForm.controls['name'].value,\n      position: this.addEmployeeForm.controls['abbreviation'].value,\n      phone: this.addEmployeeForm.controls['phone'].value,\n      username: this.addEmployeeForm.controls['username'].value,\n      password: this.addEmployeeForm.controls['password'].value,\n      bossId: this.addEmployeeForm.controls['bossId'].value,\n      departmentId: this.addEmployeeForm.controls['departmentId'].value\n    }).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n}\nEmployeeAddComponent.ɵfac = function EmployeeAddComponent_Factory(t) {\n  return new (t || EmployeeAddComponent)(i0.ɵɵdirectiveInject(i1.EmployeeClient), i0.ɵɵdirectiveInject(i1.DepartmentClient), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nEmployeeAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeAddComponent,\n  selectors: [[\"app-employee-add\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"container\"], [4, \"ngIf\"]],\n  template: function EmployeeAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, EmployeeAddComponent_ng_container_1_Template, 2, 0, \"ng-container\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.dataLoaded);\n    }\n  },\n  dependencies: [i4.NgIf, i5.MatProgressSpinner],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n  min-width: 600px;\\r\\n}\\r\\n\\r\\n.form[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  padding-top: 6px;\\r\\n}\\r\\n\\r\\n.mat-form-field[_ngcontent-%COMP%] {\\r\\n  font-size: 16px;\\r\\n  flex-grow: 1;\\r\\n}\\r\\n\\r\\n.content-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9lbXBsb3llZS9lbXBsb3llZS1hZGQvZW1wbG95ZWUtYWRkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgbWluLXdpZHRoOiA2MDBweDtcclxufVxyXG5cclxuLmZvcm0ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcGFkZGluZy10b3A6IDZweDtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxkIHtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgZmxleC1ncm93OiAxO1xyXG59XHJcblxyXG4uY29udGVudC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","combineLatest","i0","EmployeeAddComponent","constructor","employeeClient","departmentClient","dialogRef","fb","control","error","addEmployeeForm","controls","hasError","initForm","ngOnInit","employeeAll","departmentAll","subscribe","result","dataLoaded","bossSelectOptions","departmentSelectOptions","group","name","required","maxLength","position","phone","username","password","minLength","bossId","departmentId","cancel","close","submitForm","employeePOST","value","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\employee\\employee-add\\employee-add.component.ts","C:\\Users\\princz\\source\\repos\\Angular\\Angular\\ClientApp\\src\\app\\modules\\employee\\employee-add\\employee-add.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { combineLatest } from 'rxjs';\nimport {\n  DepartmentClient,\n  DepartmentDto,\n  EmployeeClient,\n  EmployeeListDto,\n} from 'src/app/api/app.generated';\n\n@Component({\n  selector: 'app-employee-add',\n  templateUrl: './employee-add.component.html',\n  styleUrls: ['./employee-add.component.css'],\n})\nexport class EmployeeAddComponent implements OnInit {\n  addEmployeeForm!: FormGroup;\n\n  bossSelectOptions: EmployeeListDto[] = [];\n  departmentSelectOptions: DepartmentDto[] = [];\n  hide = true;\n  dataLoaded = false;\n\n  constructor(\n    private readonly employeeClient: EmployeeClient,\n    private readonly departmentClient: DepartmentClient,\n    private readonly dialogRef: MatDialogRef<EmployeeAddComponent>,\n    private readonly fb: FormBuilder\n  ) {\n    this.initForm();\n  }\n\n  ngOnInit(): void {\n    combineLatest([\n      this.employeeClient.employeeAll(),\n      this.departmentClient.departmentAll(),\n    ]).subscribe((result) => {\n      this.dataLoaded = true;\n      this.bossSelectOptions = result[0];\n      this.departmentSelectOptions = result[1];\n    });\n  }\n\n  initForm() {\n    this.addEmployeeForm = this.fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      position: ['', [Validators.required, Validators.maxLength(100)]],\n      phone: ['', [Validators.required, Validators.maxLength(16)]],\n      username: ['', [Validators.required, Validators.maxLength(100)]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(20),\n        ],\n      ],\n      bossId: [''],\n      departmentId: ['', [Validators.required]],\n    });\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  submitForm() {\n    this.employeeClient\n      .employeePOST({\n        name: this.addEmployeeForm.controls['name'].value,\n        position: this.addEmployeeForm.controls['abbreviation'].value,\n        phone: this.addEmployeeForm.controls['phone'].value,\n        username: this.addEmployeeForm.controls['username'].value,\n        password: this.addEmployeeForm.controls['password'].value,\n        bossId: this.addEmployeeForm.controls['bossId'].value,\n        departmentId: this.addEmployeeForm.controls['departmentId'].value,\n      })\n      .subscribe(() => {\n        this.dialogRef.close(true);\n      });\n  }\n\n  public errorHandling = (control: string, error: string) => {\n    return this.addEmployeeForm.controls[control].hasError(error);\n  };\n}\n","<div class=\"container\">\n  <ng-container *ngIf=\"!dataLoaded\">\n    <mat-spinner></mat-spinner>\n  </ng-container>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}